version: '3.5'
services:
  zookeeper:
    image: zookeeper:3.4.9
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.0.1
    container_name: kafka
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my_log_topic:1:1"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.0
    container_name: elasticsearch
    environment:
      - cluster.name=KafkaESCluster
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:5.6.0
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  db:
    image: postgres
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  app_consumer:
    container_name: consumer
    build: .
    stdin_open: true
    tty: true
    user: appuser
    command: sh -c "/wait && java -cp SimpleSpringProject.jar ReceiveMessages"
    environment:
      WAIT_HOSTS: db:5432, kibana:5601, elasticsearch:9300, kafka:9092, zookeeper:2181

  app_producer:
    container_name: producer
    build: .
    stdin_open: true
    tty: true
    user: appuser
    command:  sh -c "/wait && java -jar SimpleSpringProject.jar"
    environment:
      WAIT_HOSTS: db:5432, kibana:5601, elasticsearch:9300, kafka:9092, zookeeper:2181
    depends_on:
      - app_consumer