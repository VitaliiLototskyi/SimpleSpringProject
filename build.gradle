
buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:4.3.0'
    }
}

plugins{
    id 'java'
    id 'nebula.ospackage' version '4.3.0'
}

repositories {
    mavenCentral()
    maven {
        url "https://artifacts.elastic.co/maven"
    }
}

dependencies {
    compile group: 'org.springframework', name: 'spring-core', version: '4.3.18.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '4.3.18.RELEASE'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.5.0'
    compile group: 'org.elasticsearch.client', name: 'transport', version: '5.6.0'
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '5.6.0'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.4.RELEASE'
    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '1.0.1'
    compile group: 'org.elasticsearch.client', name: 'x-pack-transport', version: '5.6.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.18.RELEASE'
}

ospackage {
    packageName = 'vlotot'
    version = '1.2.3'
    release = '1'
    arch = I386
    os = LINUX

    installUtils file('scripts/rpm/utils.sh')
    preInstall file('scripts/rpm/preInstall.sh')
    postInstall file('scripts/rpm/postInstall.sh')
    preUninstall 'touch /tmp/myfile'
    postUninstall file('scripts/rpm/postUninstall.sh')

    requires('qux')

    into '/opt/vlotot'

    from(jar.outputs.files) {
        into 'lib'
    }
    from(configurations.runtime) {
        into 'lib'
    }
    from('lib') {
        into 'lib'
    }
    from('scripts') {
        into 'bin'
        exclude 'database'
        fileMode = 0550
    }
    from('src/main/resources') {
        fileType CONFIG | NOREPLACE
        into 'conf'
    }
    from('home') {
        // Creating directory entries (or not) in the RPM is normally left up to redline-rpm library.
        // Use this to explicitly create an entry -- for setting directory fileMode on system directories.
        createDirectoryEntry = true
        fileMode = 0500
        into 'home'
    }
    from('endorsed') {
        // Will tell redline-rpm not to auto create directories, which
        // is sometimes necessary to avoid rpm directory conflicts
        addParentDirs = false
        into '/usr/share/tomcat/endorsed'
    }
}

buildRpm {
    requires('bar', '2.2', GREATER | EQUAL)
    requires('baz', '1.0.1', LESS)
    link('/etc/init.d/vlotot', '/opt/vlotot/bin/vlotot.init')
}

buildDeb {
    requires('bat', '1.0.1')
    link('/etc/init.d/vlotot', '/opt/vlotot/bin/vlotot.upstart')
}
