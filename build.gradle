buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:3.4.0'
    }
}

plugins {
    id 'nebula.ospackage' version '3.4.0'
    id 'java'
}
jar {
    manifest {
        attributes(
                'Main-Class': 'entrypoint.SpringSendMessages'
        )
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://artifacts.elastic.co/maven"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.springframework', name: 'spring-core', version: '4.3.18.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '4.3.18.RELEASE'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.5.0'
    compile group: 'org.elasticsearch.client', name: 'transport', version: '5.6.0'
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '5.6.0'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.4.RELEASE'
    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '1.0.1'
    compile group: 'org.elasticsearch.client', name: 'x-pack-transport', version: '5.6.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.18.RELEASE'
}


ospackage {
    packageName = 'vlotot'
    version = '1.0.0'
    release = '1'
//    arch = NOARCH
    os = LINUX
    user 'ta'
    permissionGroup 'ta'
    packageGroup 'ta'

    requires('java')

    into '/opt/vlotot'

    from(jar.outputs.files) {
        into 'lib'
    }
    from('src/main/resources/scripts') {
        into 'bin'
    }
}

buildRpm {
    link('/usr/local/bin/vlotot', '/opt/vlotot/bin/vlotot.sh')
}

task dockerBuild(type:Exec) {
    commandLine 'docker-compose', '-f', 'docker-compose.yml', 'build'
}

task dockerStart(type:Exec) {
    commandLine 'docker-compose', '-f', 'docker-compose.yml', 'up'
}
